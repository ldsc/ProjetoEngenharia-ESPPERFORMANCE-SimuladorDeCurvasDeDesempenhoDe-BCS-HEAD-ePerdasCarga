#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
\usepackage {graphicx}
\usepackage {longtable}
\usepackage {indentfirst}
\renewenvironment{center}{\par\centering}{\par}

% Comentar linhas abaixo se não estiver usando pacote abntex
% ou se o pacote ainda não foi instalado.
% neste caso sugere-se usar citações no padrão apalike (lembra o da anbt).
%\usepackage[alf ,abnt-etal-cite=2 , abnt-year-extra-label=yes , abnt-etal-list=0]{abntcite}
%\usepackage {helvet}
%\renewcommand {\familydefault}{\sfdefault}

% Para uso de listagens de código
\usepackage{color}
\definecolor{azulclaro}{rgb}{0.6,1,1}%   rgb color model
% Informa que vai usar o pacote listings, 
% disponibilizado em /usr/share/texmf/doc/latex/styles/listings.dvi
\usepackage{listings}
\end_preamble
\use_default_options false
\master DocumentoMestre-Trabalho-ProgramacaoPratica.lyx
\maintain_unincluded_children false
\language brazilian
\language_package auto
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement p
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Índice
\shortcut idx
\color #008000
\end_index
\paperwidth 210mm
\paperheight 297mm
\leftmargin 30mm
\topmargin 25mm
\rightmargin 20mm
\bottommargin 20mm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Projeto 
\begin_inset CommandInset label
LatexCommand label
name "chap:Projeto-do-Sistema"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lhead{
\backslash
thechapter - Projeto} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Neste capítulo do projeto de engenharia veremos questões associadas ao projeto
 do sistema, incluindo protocolos, recursos, plataformas suportadas, inplicações
 nos diagramas feitos anteriormente, diagramas de componentes e implantação.
 Na segunda parte revisamos os diagramas levando em conta as decisões do
 projeto do sistema.
\end_layout

\begin_layout Section
Projeto do sistema
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Projeto do sistema
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-do-sistema"

\end_inset


\end_layout

\begin_layout Standard
Depois da análise orientada a objeto desenvolve-se o projeto do sistema,
 qual envolve etapas como a definição dos protocolos, da interface API,
 o uso de recursos, a subdivisão do sistema em subsistemas, a alocação dos
 subsistemas ao hardware e a seleção das estruturas de controle, a seleção
 das plataformas do sistema, das bibliotecas externas, dos padrões de projeto,
 além da tomada de decisões conceituais e políticas que formam a infraestrutura
 do projeto.
\end_layout

\begin_layout Standard
Deve-se definir padrões de documentação, padrões para o nome das classes,
 padrões de retorno e de parâmetros em métodos, características da interface
 do usuário e características de desempenho.
 
\end_layout

\begin_layout Standard
O projeto do sistema é a estratégia de alto nível para resolver o problema
 e elaborar uma solução.
 Você deve se preocupar com itens como: 
\end_layout

\begin_layout Enumerate
Protocolos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Protocolos
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Definição dos protocolos de comunicação entre os diversos elementos externos
 
\begin_inset Newline newline
\end_inset

(como dispositivos).
\end_layout

\begin_deeper
\begin_layout Itemize
O acesso ao programa externo 
\family typewriter
gnuplot 
\family default
é feito usando fires.
 
\end_layout

\end_deeper
\begin_layout Itemize
Definição dos protocolos de comunicação entre os diversos elementos internos
 
\begin_inset Newline newline
\end_inset

(como objetos).
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Os métodos são chamados seguindo uma ordem de conceitos de obejtos do mundo
 real (bomba e fluido), depois os objetos das perdas de carga e altura de
 elevação.
 
\end_layout

\end_deeper
\begin_layout Itemize
Definição do formato dos arquivos gerados pelo software.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Os arquivos de texto serão gerados em formato ASCII (não formatado)
\end_layout

\begin_layout Itemize
Os arquivos de imagem (gráficos) são gerados com extensão png.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Recursos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Recursos
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Identificação e alocação dos recursos globais, como os recursos do sistema
 serão alocados, utilizados, compartilhados e liberados.
 Implicam modificações no diagrama de componentes.
\end_layout

\begin_deeper
\begin_layout Itemize
O programa utilizará uma máquina computacional com HD, processador, teclado
 para a entrada de dados e o monitor para a saída de dados.
 
\end_layout

\end_deeper
\begin_layout Itemize
Identificação da necessidade do uso de banco de dados.
 Implicam em modificações nos diagramas de atividades e de componentes.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O programa implementará cálculos de desempenho de bomba, baseados em conjunto
 de vazões pré-definidas.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Controle
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Controle
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Identificação da necessidade de otimização.
 
\end_layout

\begin_layout Itemize
Identificação e definição de processamento sequencial linear de controle
 e das escalas de tempo.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Plataformas
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Plataformas
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Identicação das estruturas arquitetônicas comuns.:
\end_layout

\begin_deeper
\begin_layout Itemize
O programa será desenvolvido em linguagem de programação orientada a objeto
 C++, versão C++ 14.
\end_layout

\end_deeper
\begin_layout Itemize
Identicação e definição das plataformas a serem suportadas: hardware, sistema
 operacional e linguagem de programação.
\end_layout

\begin_deeper
\begin_layout Itemize
O programa será desenvolvido e testado em computador 
\family typewriter
Intel
\family default
 32/64 bits, com sistema operacional 
\family typewriter
Windows
\family default
 64 bits usando linguagem C++ orientada a objeto, e compilador gcc.
 
\end_layout

\end_deeper
\begin_layout Itemize
Além disso, o simulador exige a instalação software externo 
\family typewriter
Gnuplot
\family default
.
\end_layout

\begin_layout Itemize
O simulador funciona em modo texto, executado através de uma janela do terminal
\end_layout

\end_deeper
\begin_layout Section
Projeto orientado a objeto – POO
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
POO
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Projeto orientado a objeto
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-orientado-a-objeto"

\end_inset


\end_layout

\begin_layout Standard
O projeto orientado a objeto é a etapa posterior ao projeto do sistema.
 Baseia-se na análise, mas considera as decisões do projeto do sistema.
 Acrescenta a análise desenvolvida e as características da plataforma escolhida
 (hardware, sistema operacional e linguagem de softwareção).
 Passa pelo maior detalhamento do funcionamento do software, acrescentando
 atributos e métodos que envolvem a solução de problemas específicos não
 identificados durante a análise.
\end_layout

\begin_layout Standard
Envolve a otimização da estrutura de dados e dos algoritmos, a minimização
 do tempo de execução, de memória e de custos.
 Existe um desvio de ênfase para os conceitos da plataforma selecionada.
 
\end_layout

\begin_layout Standard
Exemplo: na análise você define que existe um método para salvar um arquivo
 em disco, define um atributo nomeDoArquivo, mas não se preocupa com detalhes
 específicos da linguagem.
 Já no projeto, você inclui as bibliotecas necessárias para acesso ao disco,
 cria um objeto específico para acessar o disco, podendo, portanto, acrescentar
 novas classes àquelas desenvolvidas na análise.
 
\end_layout

\begin_layout Subsubsection
Efeitos do projeto no modelo estrutural 
\end_layout

\begin_layout Itemize
Novas classes e composições devem ser acrescentadas ao modelo.
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto foram feitas composições que podem ser visualizadas no diagrama
 de classe, Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-classes"

\end_inset

.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto no modelo dinâmico
\end_layout

\begin_layout Itemize
Os diagramas de sequência e comunicação foram modicados a medida que a implement
ação foi desenvolvida, Figuras 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-sequencia"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-comunicação"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nos atributos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
atributos
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-nos-atributos"

\end_inset


\end_layout

\begin_layout Itemize
Atributos novos podem ser adicionados a uma classe, como, por exemplo, atributos
 específicos de uma determinada linguagem de softwareção (acesso a disco,
 ponteiros, constantes e informações correlacionadas).
\end_layout

\begin_deeper
\begin_layout Itemize
Foi adicionados novos atributos como exemplo vazaoBPD, que converte a unidade
 de vazao usada nos cálculos (m³/s) para bbl/d.
 
\end_layout

\begin_layout Itemize
Foi removido o atributo perdaCargaTotal, que realizava o somatório das perdas
 carga.
 
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nas heranças
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
heranças
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Efeitos do projeto nas heranças
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Heranças
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Reorganização da herança no diagrama de classes.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Todas as heranças foram retiradas e substituidas por composições.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nas otimizações
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
otimizações
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Otimização do sistema.
\end_layout

\begin_deeper
\begin_layout Itemize
A retirada das heranças fez com que o programa ao invés de criar o objeto
 da classe CPropriedadesEscoamento várias vezes, passou a criar uma vez
 apenas os objetos das classes de perdas de carga e 
\family typewriter
\shape italic
head
\family default
\shape default
 teórico.
 
\end_layout

\end_deeper
\begin_layout Section
Diagrama de componentes
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Diagrama de componentes
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-componentes"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de componentes mostra a forma como os componentes do software
 se relacionam, suas dependências.
 Inclui itens como: componentes, subsistemas, executáveis, nós, associações,
 dependências, generalizações, restrições e notas.
 Exemplos de componentes são bibliotecas estáticas, bibliotecas dinâmicas,
 executáveis, arquivos de disco, código-fonte.
 Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:5.1"

\end_inset

 um exemplo de diagrama de componentes.
 A geração da biblioteca depende dos arquivos de classe de extensão .h e
 .cpp.
 O software executável a ser gerado depende da biblioteca gerada, dos arquivos
 da biblioteca, dos arquivos desta e do banco de dados.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/Diagrama_componente.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:5.1"

\end_inset

Diagrama de componentes
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-componentes"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de implantação
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Diagrama de execução
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-execução"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de implantação é um diagrama que inclui relações entre o sistema
 e o hardwar e deve incluir elementos necessários para que o sistema seja
 colocado em funcionamento:
\end_layout

\begin_layout Standard
computador, periféricos, processadores, dispositivos, nós, relacionamentos
 de dependência, associação, componentes, subsistemas, restrições e notas.
\end_layout

\begin_layout Standard
Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:5.2"

\end_inset

 um exemplo de diagrama de implantação do software.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/Diagrama_execução.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:5.2"

\end_inset

Diagrama de implantação.
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-implantação."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
